##实验二  平面与直线

实验目的
1. 掌握MuPAD绘制平面与直线的功能；
2. 运用MuPAD的向量代数功能，求解与平面、直线有关的问题.

1. 绘制平面的图像
(1) 平面一般方程
        如果平面的一般方程可以改写成的形式，可用命令plot::Function3d生成平面的图形对象，
语法格式如下：
plot::Function3d(A*x+B*y+C, x=xmin..xmax, y=ymin..ymax, a=a1..a2, Attributes)
说明：
x=xmin..xmax, y=ymin..ymax：二元函数的自变量及取值范围，必须满足xmin<xmax和ymin<ymax；
a=a1..a2：可选项，动画参数及取值范围（既可以a1>a2，也可以a1<a2）；
Attributes：可选项，修改某些图形属性的默认设置.

(2) 平面点法式方程
        命令plot::Plane可生成点法式方程描述的平面图形对象，语法格式如下：
plot::Plane([x0, y0, z0], [nx, ny, nz], a=a1..a2, Attributes)
说明：
[x0, y0, z0]：平面上的已知点的坐标，列表类型（DOM_LIST）；
[nx, ny, nz]：平面的法向量的坐标，列表；
a=a1..a2：可选项，动画参数及取值范围（既可以a1>a2，也可以a1<a2）；
Attributes：可选项，修改某些图形属性的默认设置.

(3) 平面三点式方程
        命令plot::Plane可生成三点式方程描述的平面图形对象，语法格式如下：
plot::Plane([x1, y1, z1], [x2, y2, z2], [x3, y3, z3], a=a1..a2, Attributes)
说明：
[x1, y1, z1], [x2, y2, z2], [x3, y3, z3]：平面上已知的三点、和的坐标，列表.
a=a1..a2：可选项，动画参数及取值范围（既可以a1>a2，也可以a1<a2）；
Attributes：可选项，修改某些图形属性的默认设置.
        注：命令plot::Plane的两种格式都不需要设置直角坐标范围，系统会根据在同一幅图里面其他的图形对象的
直角坐标范围自动匹配.

(4) 平面点位式参数方程
        命令plot::Surface可生成点位式参数方程描述的平面图形对象，语法格式如下：
plot::Surface([x0+ux*s+vx*t, y0+uy*s+vy*t, z0+uz*s+vz*t], s=smin..smax, t=tmin..tmax, a=a1..a2, Attributes)
说明：
x0, y0, z0：平面上的已知点的坐标分量；
ux, uy, uz, vx, vy, vz：两个不共线但都平行于平面的向量和的坐标分量；
s=smin..smax, t=tmin..tmax：参数及取值范围，必须满足smin<smax和tmin<tmax；
a=a1..a2：可选项，动画参数及取值范围（既可以a1>a2，也可以a1<a2）；
Attributes：可选项，修改某些图形属性的默认设置.

2. 绘制空间直线的图像
(1) 已知直线段两个端点的情形
        如果已知直线段两个端点和，可用命令plot::Line3d生成空间直线段的图形对象，
语法格式如下：
plot::Line3d([x1, y1, z1], [x2, y2, z2], a=a1..a2, Attributes)

(2) 直线点向式参数方程
        命令plot::Curve3d可生成由点向式参数方程描述的空间直线图形对象. 
语法格式如下：
plot::Curve3d([x0+vx*t, y0+vy*t, z0+vz*t], t=tmin..tmax, a=a1..a2, Attributes)
说明：
x0, y0, z0：直线上的已知点的坐标分量；
vx, vy, vz：直线的方向向量的坐标分量；
t=tmin..tmax：参数及取值范围，必须满足tmin<tmax；
a=a1..a2：可选项，动画参数及取值范围（既可以a1>a2，也可以a1<a2）；
Attributes：可选项，修改某些图形属性的默认设置.

3. 求解线性方程组
        平面与直线的题目常常涉及线性方程组的求解，可以用命令solve求解线性方程组，语法格式如下：
solve(eqs, vars)
说明：
eqs：方程组，属于列表类型（DOM_LIST）或集合类型（DOM_SET），即需要用一对方括号或者大括号括起来，
方程的表达式之间用逗号分隔，用等号表示方程左右两边相等，如果省略等号及右边，默认方程的右边等于0；
vars：未知变量，列表或集合，变量之间用逗号分隔.

4. RGB色彩模式
        RGB色彩模式包括RGB值和RGBa值两种类型. 如果采用RGB值的颜色，图形对象将是不透明的，使得用户看不见
被遮挡的图形对象. 如果想让图形对象具有透明的效果，可以采用RGBa值的颜色，即在RGB值后面添加一个
在0和1之间的数值，成为有4个数的列表[r, g, b, a]， a=1 表示不透明，a=0 表示完全透明（用户看不见该图形对象），
当0<a<1时图形对象是半透明的，a越接近0，透明度越高. 在MuPAD已有的RGB颜色名称后面添加".[a]"，就变成
RGBa值的颜色，例如RGB::Black.[0.25]，其中句点是连结运算符. 使用RGBa值的颜色，可改善因重叠导致的模糊感，
也可使得被遮挡的图形对象看得见.
